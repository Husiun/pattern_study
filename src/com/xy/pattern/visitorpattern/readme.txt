设计模式之访问者模式  visitor pattern

    访问者模式是对象的行为模式，访问者模式的目的是封装一些施加于某种数据结构元素之上的操作。
    一旦这些操作需要修改的话，接受这个操作的数据结构则可以保持不变。
    访问者模式涉及到的角色：
    1.抽象访问者角色Visitor：是一个抽象类或接口，定义访问方法，参数为具体的访问对象
    2.具体访问角色ConcreteVisitor 实现抽象类或者接口，定义访问的操作
    3.抽象节点角色Node：定义一个接受具体访问者作为参数的方法
    4.具体节点角色ConcreteNode:实现了抽象节点的类，实现接收方法
    5.结构对象角色ObjectStructure 为了遍历结构中的所有元素 如果需要可以设计成一个聚集list或者set,一般
    不另外定义
   抽象访问者定义访问方法的时候会为每一个具体的节点都定义访问操作，把具体的节点作为参数


访问者模式就像我们去朋友加做客一样，首先有朋友邀请我们做客，那么我们就是那个访问者，
到了哪里以后我们不能说是大眼瞪小眼啊，得聊天啊什么的，当聊到某一个话题的时候，那么我作为访问者有我自己
的想法，心里会自己去想想某些东西，这就是一个很好的访问这模式，
javac编译器在进行语义分析的时候就是基于访问者模式，遍历节点的